
class A{
	public mcase<Pattn> a = ({lofi: new Pattn(); hifi: new Pattn()});
	//public mcase<int> primitive = ({lofi: 1; hifi: 3}); 
	public Object field;
	
	public Object foo(){ 
		mcase<Pattn> s = a;
		Object o = a.x;
		int battery = 2;
		int progress = 2;
		int size = 3;
		
		sustainable{ 
			int i = 0;
			int prev = 0;//currentBatt();
			//int budget = prev * 0.2;
			//int budget = -1;
			//int mode = highest
			int a = 0;
			for(i = 0; i < size; i++){ 
				//(budget - (prev - currentBatt))/budget;
				//(size - i)/size
				uniform{
					//compute(...);
				}
				
				//other statement
			}
		}
		bsupply (0.2 * battery)
		demand(size) -> (size - i);
		
		return null;
	}
}

class Pattn{
	Object x = new Object();
}